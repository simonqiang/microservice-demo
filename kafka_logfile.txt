schema-registry_1  | Dec 15, 2022 1:51:03 AM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
schema-registry_1  | WARNING: A provider io.confluent.kafka.schemaregistry.rest.resources.SubjectsResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.kafka.schemaregistry.rest.resources.SubjectsResource will be ignored.
schema-registry_1  | [2022-12-15 01:51:03,923] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version)
schema-registry_1  | [2022-12-15 01:51:04,356] INFO Started o.e.j.s.ServletContextHandler@4baf352a{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
schema-registry_1  | [2022-12-15 01:51:04,424] INFO Started o.e.j.s.ServletContextHandler@3ecd267f{/ws,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
schema-registry_1  | [2022-12-15 01:51:04,482] INFO Started NetworkTrafficServerConnector@7ca33c24{HTTP/1.1,[http/1.1]}{schema-registry:8081} (org.eclipse.jetty.server.AbstractConnector)
schema-registry_1  | [2022-12-15 01:51:04,486] INFO Started @18531ms (org.eclipse.jetty.server.Server)
schema-registry_1  | [2022-12-15 01:51:04,487] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
zookeeper_1        | [2022-12-15 01:51:23,431] INFO Got user-level KeeperException when processing sessionid:0x100000197b60008 type:setData cxid:0x60 zxid:0x68 txntype:-1 reqpath:n/a Error Path:/config/topics/twitter-topic Error:KeeperErrorCode = NoNode for /config/topics/twitter-topic (org.apache.zookeeper.server.PrepRequestProcessor)
kafka-broker-2_1   | [2022-12-15 01:51:23,447] INFO Topic creation Map(twitter-topic-2 -> ArrayBuffer(1, 2, 3), twitter-topic-1 -> ArrayBuffer(2, 3, 1), twitter-topic-0 -> ArrayBuffer(3, 1, 2)) (kafka.zk.AdminZkClient)
kafka-broker-2_1   | [2022-12-15 01:51:23,462] INFO [Controller id=2] New topics: [Set(twitter-topic)], deleted topics: [Set()], new partition replica assignment [Map(twitter-topic-2 -> Vector(1, 2, 3), twitter-topic-1 -> Vector(2, 3, 1), twitter-topic-0 -> Vector(3, 1, 2))] (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 01:51:23,462] INFO [Controller id=2] New partition creation callback for twitter-topic-2,twitter-topic-1,twitter-topic-0 (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 01:51:23,463] TRACE [Controller id=2 epoch=1] Changed partition twitter-topic-2 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,463] TRACE [Controller id=2 epoch=1] Changed partition twitter-topic-1 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,463] TRACE [Controller id=2 epoch=1] Changed partition twitter-topic-0 state from NonExistentPartition to NewPartition with assigned replicas 3,1,2 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,467] TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition twitter-topic-1 from NonExistentReplica to NewReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,467] TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition twitter-topic-2 from NonExistentReplica to NewReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,467] TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition twitter-topic-0 from NonExistentReplica to NewReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,468] TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition twitter-topic-2 from NonExistentReplica to NewReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,468] TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition twitter-topic-1 from NonExistentReplica to NewReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,468] TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition twitter-topic-0 from NonExistentReplica to NewReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,469] TRACE [Controller id=2 epoch=1] Changed state of replica 3 for partition twitter-topic-1 from NonExistentReplica to NewReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,469] TRACE [Controller id=2 epoch=1] Changed state of replica 3 for partition twitter-topic-2 from NonExistentReplica to NewReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,469] TRACE [Controller id=2 epoch=1] Changed state of replica 3 for partition twitter-topic-0 from NonExistentReplica to NewReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,495] TRACE [Controller id=2 epoch=1] Changed partition twitter-topic-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 3), zkVersion=0) (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,496] TRACE [Controller id=2 epoch=1] Changed partition twitter-topic-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 3, 1), zkVersion=0) (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,496] TRACE [Controller id=2 epoch=1] Changed partition twitter-topic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 1, 2), zkVersion=0) (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,496] TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=1, leader=2, leaderEpoch=0, isr=2,3,1, zkVersion=0, replicas=2,3,1, isNew=true) to broker 2 for partition twitter-topic-1 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,496] TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=3,1,2, zkVersion=0, replicas=3,1,2, isNew=true) to broker 2 for partition twitter-topic-0 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,496] TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=1, leader=1, leaderEpoch=0, isr=1,2,3, zkVersion=0, replicas=1,2,3, isNew=true) to broker 2 for partition twitter-topic-2 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,500] TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=1, leader=2, leaderEpoch=0, isr=2,3,1, zkVersion=0, replicas=2,3,1, isNew=true) to broker 1 for partition twitter-topic-1 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,501] TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=3,1,2, zkVersion=0, replicas=3,1,2, isNew=true) to broker 1 for partition twitter-topic-0 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,501] TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=1, leader=1, leaderEpoch=0, isr=1,2,3, zkVersion=0, replicas=1,2,3, isNew=true) to broker 1 for partition twitter-topic-2 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,503] TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=1, leader=2, leaderEpoch=0, isr=2,3,1, zkVersion=0, replicas=2,3,1, isNew=true) to broker 3 for partition twitter-topic-1 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,503] TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=3,1,2, zkVersion=0, replicas=3,1,2, isNew=true) to broker 3 for partition twitter-topic-0 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,503] TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=1, leader=1, leaderEpoch=0, isr=1,2,3, zkVersion=0, replicas=1,2,3, isNew=true) to broker 3 for partition twitter-topic-2 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,506] TRACE [Controller id=2 epoch=1] Sending UpdateMetadata request PartitionState(controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition twitter-topic-1 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,506] TRACE [Controller id=2 epoch=1] Sending UpdateMetadata request PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition twitter-topic-0 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,506] TRACE [Controller id=2 epoch=1] Sending UpdateMetadata request PartitionState(controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition twitter-topic-2 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:23,511] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=3,1,2, zkVersion=0, replicas=3,1,2, isNew=true) correlation id 5 from controller 2 epoch 1 for partition twitter-topic-0 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,512] TRACE [Broker id=2] Received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=3,1,2, zkVersion=0, replicas=3,1,2, isNew=true) correlation id 5 from controller 2 epoch 1 for partition twitter-topic-0 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,513] TRACE [Broker id=2] Received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=2, leaderEpoch=0, isr=2,3,1, zkVersion=0, replicas=2,3,1, isNew=true) correlation id 5 from controller 2 epoch 1 for partition twitter-topic-1 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:23,513] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=2, leaderEpoch=0, isr=2,3,1, zkVersion=0, replicas=2,3,1, isNew=true) correlation id 5 from controller 2 epoch 1 for partition twitter-topic-1 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,513] TRACE [Broker id=2] Received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=1, leaderEpoch=0, isr=1,2,3, zkVersion=0, replicas=1,2,3, isNew=true) correlation id 5 from controller 2 epoch 1 for partition twitter-topic-2 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:23,513] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=1, leaderEpoch=0, isr=1,2,3, zkVersion=0, replicas=1,2,3, isNew=true) correlation id 5 from controller 2 epoch 1 for partition twitter-topic-2 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,519] TRACE [Broker id=3] Received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=3,1,2, zkVersion=0, replicas=3,1,2, isNew=true) correlation id 5 from controller 2 epoch 1 for partition twitter-topic-0 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,521] TRACE [Broker id=3] Received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=2, leaderEpoch=0, isr=2,3,1, zkVersion=0, replicas=2,3,1, isNew=true) correlation id 5 from controller 2 epoch 1 for partition twitter-topic-1 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,521] TRACE [Broker id=3] Received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=1, leaderEpoch=0, isr=1,2,3, zkVersion=0, replicas=1,2,3, isNew=true) correlation id 5 from controller 2 epoch 1 for partition twitter-topic-2 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,523] TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition twitter-topic-1 from NewReplica to OnlineReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,523] TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition twitter-topic-2 from NewReplica to OnlineReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,524] TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition twitter-topic-0 from NewReplica to OnlineReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,524] TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition twitter-topic-2 from NewReplica to OnlineReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,524] TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition twitter-topic-1 from NewReplica to OnlineReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,525] TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition twitter-topic-0 from NewReplica to OnlineReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,525] TRACE [Controller id=2 epoch=1] Changed state of replica 3 for partition twitter-topic-1 from NewReplica to OnlineReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,525] TRACE [Controller id=2 epoch=1] Changed state of replica 3 for partition twitter-topic-2 from NewReplica to OnlineReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,525] TRACE [Controller id=2 epoch=1] Changed state of replica 3 for partition twitter-topic-0 from NewReplica to OnlineReplica (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,548] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition twitter-topic-1 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,561] INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions twitter-topic-1 (kafka.server.ReplicaFetcherManager)
kafka-broker-3_1   | [2022-12-15 01:51:23,575] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition twitter-topic-0 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,578] INFO [Log partition=twitter-topic-1, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
kafka-broker-2_1   | [2022-12-15 01:51:23,580] INFO [Log partition=twitter-topic-1, dir=/var/lib/kafka/data] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
kafka-broker-1_1   | [2022-12-15 01:51:23,581] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition twitter-topic-2 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,576] INFO [ReplicaFetcherManager on broker 3] Removed fetcher for partitions twitter-topic-0 (kafka.server.ReplicaFetcherManager)
kafka-broker-1_1   | [2022-12-15 01:51:23,586] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions twitter-topic-2 (kafka.server.ReplicaFetcherManager)
kafka-broker-2_1   | [2022-12-15 01:51:23,604] INFO Created log for partition twitter-topic-1 in /var/lib/kafka/data with properties {compression.type -> producer, message.format.version -> 2.0-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
kafka-broker-2_1   | [2022-12-15 01:51:23,610] INFO [Partition twitter-topic-1 broker=2] No checkpointed highwatermark is found for partition twitter-topic-1 (kafka.cluster.Partition)
kafka-broker-2_1   | [2022-12-15 01:51:23,610] INFO Replica loaded for partition twitter-topic-1 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-2_1   | [2022-12-15 01:51:23,611] INFO Replica loaded for partition twitter-topic-1 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-2_1   | [2022-12-15 01:51:23,611] INFO Replica loaded for partition twitter-topic-1 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-2_1   | [2022-12-15 01:51:23,612] INFO [Partition twitter-topic-1 broker=2] twitter-topic-1 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
kafka-broker-2_1   | [2022-12-15 01:51:23,620] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-1 (last update controller epoch 1) (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,621] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition twitter-topic-1 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,622] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition twitter-topic-2 with leader 1 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,622] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition twitter-topic-0 with leader 3 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,623] INFO Replica loaded for partition twitter-topic-2 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-2_1   | [2022-12-15 01:51:23,632] INFO [Log partition=twitter-topic-2, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
kafka-broker-3_1   | [2022-12-15 01:51:23,633] INFO [Log partition=twitter-topic-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
kafka-broker-3_1   | [2022-12-15 01:51:23,637] INFO [Log partition=twitter-topic-0, dir=/var/lib/kafka/data] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 21 ms (kafka.log.Log)
kafka-broker-2_1   | [2022-12-15 01:51:23,636] INFO [Log partition=twitter-topic-2, dir=/var/lib/kafka/data] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
kafka-broker-2_1   | [2022-12-15 01:51:23,643] INFO Created log for partition twitter-topic-2 in /var/lib/kafka/data with properties {compression.type -> producer, message.format.version -> 2.0-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
kafka-broker-3_1   | [2022-12-15 01:51:23,648] INFO Created log for partition twitter-topic-0 in /var/lib/kafka/data with properties {compression.type -> producer, message.format.version -> 2.0-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
kafka-broker-2_1   | [2022-12-15 01:51:23,649] INFO [Partition twitter-topic-2 broker=2] No checkpointed highwatermark is found for partition twitter-topic-2 (kafka.cluster.Partition)
kafka-broker-2_1   | [2022-12-15 01:51:23,649] INFO Replica loaded for partition twitter-topic-2 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-2_1   | [2022-12-15 01:51:23,649] INFO Replica loaded for partition twitter-topic-2 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-3_1   | [2022-12-15 01:51:23,652] INFO [Partition twitter-topic-0 broker=3] No checkpointed highwatermark is found for partition twitter-topic-0 (kafka.cluster.Partition)
kafka-broker-2_1   | [2022-12-15 01:51:23,650] INFO Replica loaded for partition twitter-topic-0 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-3_1   | [2022-12-15 01:51:23,654] INFO Replica loaded for partition twitter-topic-0 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-2_1   | [2022-12-15 01:51:23,654] INFO Replica loaded for partition twitter-topic-0 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-3_1   | [2022-12-15 01:51:23,655] INFO Replica loaded for partition twitter-topic-0 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-3_1   | [2022-12-15 01:51:23,655] INFO Replica loaded for partition twitter-topic-0 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-3_1   | [2022-12-15 01:51:23,658] INFO [Partition twitter-topic-0 broker=3] twitter-topic-0 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
kafka-broker-3_1   | [2022-12-15 01:51:23,662] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-0 (last update controller epoch 1) (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,662] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition twitter-topic-0 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,662] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition twitter-topic-2 with leader 1 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,664] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition twitter-topic-1 with leader 2 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,664] INFO [Log partition=twitter-topic-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
kafka-broker-2_1   | [2022-12-15 01:51:23,666] INFO [Log partition=twitter-topic-0, dir=/var/lib/kafka/data] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 4 ms (kafka.log.Log)
kafka-broker-3_1   | [2022-12-15 01:51:23,666] INFO Replica loaded for partition twitter-topic-2 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-3_1   | [2022-12-15 01:51:23,672] INFO Replica loaded for partition twitter-topic-2 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-3_1   | [2022-12-15 01:51:23,686] INFO [Log partition=twitter-topic-2, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
kafka-broker-2_1   | [2022-12-15 01:51:23,690] INFO Created log for partition twitter-topic-0 in /var/lib/kafka/data with properties {compression.type -> producer, message.format.version -> 2.0-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
kafka-broker-2_1   | [2022-12-15 01:51:23,693] INFO [Partition twitter-topic-0 broker=2] No checkpointed highwatermark is found for partition twitter-topic-0 (kafka.cluster.Partition)
kafka-broker-2_1   | [2022-12-15 01:51:23,693] INFO Replica loaded for partition twitter-topic-0 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-2_1   | [2022-12-15 01:51:23,694] INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions twitter-topic-0,twitter-topic-2 (kafka.server.ReplicaFetcherManager)
kafka-broker-2_1   | [2022-12-15 01:51:23,694] TRACE [Broker id=2] Stopped fetchers as part of become-follower request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-0 with leader 3 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,694] TRACE [Broker id=2] Stopped fetchers as part of become-follower request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-2 with leader 1 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,695] TRACE [Broker id=2] Truncated logs and checkpointed recovery boundaries for partition twitter-topic-0 as part of become-follower request with correlation id 5 from controller 2 epoch 1 with leader 3 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,695] INFO [Log partition=twitter-topic-2, dir=/var/lib/kafka/data] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 10 ms (kafka.log.Log)
kafka-broker-2_1   | [2022-12-15 01:51:23,695] TRACE [Broker id=2] Truncated logs and checkpointed recovery boundaries for partition twitter-topic-2 as part of become-follower request with correlation id 5 from controller 2 epoch 1 with leader 1 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,699] INFO Created log for partition twitter-topic-2 in /var/lib/kafka/data with properties {compression.type -> producer, message.format.version -> 2.0-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
kafka-broker-3_1   | [2022-12-15 01:51:23,708] INFO [Partition twitter-topic-2 broker=3] No checkpointed highwatermark is found for partition twitter-topic-2 (kafka.cluster.Partition)
kafka-broker-3_1   | [2022-12-15 01:51:23,708] INFO Replica loaded for partition twitter-topic-2 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-3_1   | [2022-12-15 01:51:23,710] INFO Replica loaded for partition twitter-topic-1 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-3_1   | [2022-12-15 01:51:23,723] INFO [Log partition=twitter-topic-1, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
kafka-broker-3_1   | [2022-12-15 01:51:23,725] INFO [Log partition=twitter-topic-1, dir=/var/lib/kafka/data] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 3 ms (kafka.log.Log)
kafka-broker-3_1   | [2022-12-15 01:51:23,728] INFO Created log for partition twitter-topic-1 in /var/lib/kafka/data with properties {compression.type -> producer, message.format.version -> 2.0-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
kafka-broker-3_1   | [2022-12-15 01:51:23,728] INFO [Partition twitter-topic-1 broker=3] No checkpointed highwatermark is found for partition twitter-topic-1 (kafka.cluster.Partition)
kafka-broker-3_1   | [2022-12-15 01:51:23,729] INFO Replica loaded for partition twitter-topic-1 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-3_1   | [2022-12-15 01:51:23,729] INFO Replica loaded for partition twitter-topic-1 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-3_1   | [2022-12-15 01:51:23,730] INFO [ReplicaFetcherManager on broker 3] Removed fetcher for partitions twitter-topic-2,twitter-topic-1 (kafka.server.ReplicaFetcherManager)
kafka-broker-3_1   | [2022-12-15 01:51:23,730] TRACE [Broker id=3] Stopped fetchers as part of become-follower request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-2 with leader 1 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,730] TRACE [Broker id=3] Stopped fetchers as part of become-follower request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-1 with leader 2 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,730] TRACE [Broker id=3] Truncated logs and checkpointed recovery boundaries for partition twitter-topic-2 as part of become-follower request with correlation id 5 from controller 2 epoch 1 with leader 1 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,731] TRACE [Broker id=3] Truncated logs and checkpointed recovery boundaries for partition twitter-topic-1 as part of become-follower request with correlation id 5 from controller 2 epoch 1 with leader 2 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,738] INFO [ReplicaFetcherManager on broker 2] Added fetcher for partitions List([twitter-topic-2, initOffset 0 to broker BrokerEndPoint(1,kafka-broker-1,9092)] , [twitter-topic-0, initOffset 0 to broker BrokerEndPoint(3,kafka-broker-3,9092)] ) (kafka.server.ReplicaFetcherManager)
kafka-broker-2_1   | [2022-12-15 01:51:23,739] TRACE [Broker id=2] Started fetcher to new leader as part of become-follower request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-0 with leader 3 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,742] TRACE [Broker id=2] Started fetcher to new leader as part of become-follower request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-2 with leader 1 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,742] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition twitter-topic-2 with leader 1 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,743] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition twitter-topic-0 with leader 3 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,745] INFO [ReplicaAlterLogDirsManager on broker 2] Added fetcher for partitions List() (kafka.server.ReplicaAlterLogDirsManager)
kafka-broker-2_1   | [2022-12-15 01:51:23,752] TRACE [Controller id=2 epoch=1] Received response {error_code=0,partitions=[{topic=twitter-topic,partition=0,error_code=0},{topic=twitter-topic,partition=1,error_code=0},{topic=twitter-topic,partition=2,error_code=0}]} for request LEADER_AND_ISR with correlation id 5 sent to broker kafka-broker-2:9092 (id: 2 rack: null) (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,751] INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
kafka-broker-2_1   | [2022-12-15 01:51:23,768] WARN [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Based on follower's leader epoch, leader replied with an unknown offset in twitter-topic-2. The initial fetch offset 0 will be used for truncation. (kafka.server.ReplicaFetcherThread)
kafka-broker-2_1   | [2022-12-15 01:51:23,769] INFO [Log partition=twitter-topic-2, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
kafka-broker-3_1   | [2022-12-15 01:51:23,772] INFO [ReplicaFetcherManager on broker 3] Added fetcher for partitions List([twitter-topic-1, initOffset 0 to broker BrokerEndPoint(2,kafka-broker-2,9092)] , [twitter-topic-2, initOffset 0 to broker BrokerEndPoint(1,kafka-broker-1,9092)] ) (kafka.server.ReplicaFetcherManager)
kafka-broker-3_1   | [2022-12-15 01:51:23,764] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
kafka-broker-2_1   | [2022-12-15 01:51:23,777] TRACE [Broker id=2] Cached leader info PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) for partition twitter-topic-0 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,777] TRACE [Broker id=2] Cached leader info PartitionState(controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition twitter-topic-1 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,777] TRACE [Broker id=2] Cached leader info PartitionState(controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition twitter-topic-2 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,777] TRACE [Broker id=3] Started fetcher to new leader as part of become-follower request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-2 with leader 1 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,779] WARN [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Based on follower's leader epoch, leader replied with an unknown offset in twitter-topic-2. The initial fetch offset 0 will be used for truncation. (kafka.server.ReplicaFetcherThread)
kafka-broker-3_1   | [2022-12-15 01:51:23,779] TRACE [Broker id=3] Started fetcher to new leader as part of become-follower request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-1 with leader 2 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,780] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition twitter-topic-2 with leader 1 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,781] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition twitter-topic-1 with leader 2 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,779] INFO [Log partition=twitter-topic-2, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
kafka-broker-3_1   | [2022-12-15 01:51:23,782] INFO [ReplicaAlterLogDirsManager on broker 3] Added fetcher for partitions List() (kafka.server.ReplicaAlterLogDirsManager)
kafka-broker-2_1   | [2022-12-15 01:51:23,786] TRACE [Controller id=2 epoch=1] Received response {error_code=0} for request UPDATE_METADATA with correlation id 6 sent to broker kafka-broker-2:9092 (id: 2 rack: null) (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,795] TRACE [Controller id=2 epoch=1] Received response {error_code=0,partitions=[{topic=twitter-topic,partition=0,error_code=0},{topic=twitter-topic,partition=1,error_code=0},{topic=twitter-topic,partition=2,error_code=0}]} for request LEADER_AND_ISR with correlation id 5 sent to broker kafka-broker-3:9092 (id: 3 rack: null) (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,804] TRACE [Broker id=3] Cached leader info PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) for partition twitter-topic-0 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,805] TRACE [Broker id=3] Cached leader info PartitionState(controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition twitter-topic-1 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger)
kafka-broker-3_1   | [2022-12-15 01:51:23,805] TRACE [Broker id=3] Cached leader info PartitionState(controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition twitter-topic-2 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:23,808] TRACE [Controller id=2 epoch=1] Received response {error_code=0} for request UPDATE_METADATA with correlation id 6 sent to broker kafka-broker-3:9092 (id: 3 rack: null) (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:23,820] INFO [Log partition=twitter-topic-2, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
kafka-broker-1_1   | [2022-12-15 01:51:23,860] INFO [Log partition=twitter-topic-2, dir=/var/lib/kafka/data] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 186 ms (kafka.log.Log)
kafka-broker-1_1   | [2022-12-15 01:51:23,993] INFO Created log for partition twitter-topic-2 in /var/lib/kafka/data with properties {compression.type -> producer, message.format.version -> 2.0-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
kafka-broker-1_1   | [2022-12-15 01:51:24,011] INFO [Partition twitter-topic-2 broker=1] No checkpointed highwatermark is found for partition twitter-topic-2 (kafka.cluster.Partition)
kafka-broker-1_1   | [2022-12-15 01:51:24,015] INFO Replica loaded for partition twitter-topic-2 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-1_1   | [2022-12-15 01:51:24,018] INFO Replica loaded for partition twitter-topic-2 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-1_1   | [2022-12-15 01:51:24,020] INFO Replica loaded for partition twitter-topic-2 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-1_1   | [2022-12-15 01:51:24,062] INFO [Partition twitter-topic-2 broker=1] twitter-topic-2 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
kafka-broker-2_1   | [2022-12-15 01:51:24,211] WARN [ReplicaFetcher replicaId=2, leaderId=3, fetcherId=0] Based on follower's leader epoch, leader replied with an unknown offset in twitter-topic-0. The initial fetch offset 0 will be used for truncation. (kafka.server.ReplicaFetcherThread)
kafka-broker-2_1   | [2022-12-15 01:51:24,212] INFO [Log partition=twitter-topic-0, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
kafka-broker-3_1   | [2022-12-15 01:51:24,217] WARN [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Based on follower's leader epoch, leader replied with an unknown offset in twitter-topic-1. The initial fetch offset 0 will be used for truncation. (kafka.server.ReplicaFetcherThread)
kafka-broker-3_1   | [2022-12-15 01:51:24,219] INFO [Log partition=twitter-topic-1, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
kafka-broker-1_1   | [2022-12-15 01:51:24,393] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-2 (last update controller epoch 1) (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,397] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition twitter-topic-2 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,397] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition twitter-topic-0 with leader 3 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,397] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition twitter-topic-1 with leader 2 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,421] INFO Replica loaded for partition twitter-topic-0 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-1_1   | [2022-12-15 01:51:24,676] INFO [Log partition=twitter-topic-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
kafka-broker-1_1   | [2022-12-15 01:51:24,691] INFO [Log partition=twitter-topic-0, dir=/var/lib/kafka/data] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 26 ms (kafka.log.Log)
kafka-broker-1_1   | [2022-12-15 01:51:24,746] INFO Created log for partition twitter-topic-0 in /var/lib/kafka/data with properties {compression.type -> producer, message.format.version -> 2.0-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
kafka-broker-2_1   | [2022-12-15 01:51:24,761] ERROR [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Error for partition twitter-topic-2 at offset 0 (kafka.server.ReplicaFetcherThread)
kafka-broker-2_1   | org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
kafka-broker-1_1   | [2022-12-15 01:51:24,797] INFO [Partition twitter-topic-0 broker=1] No checkpointed highwatermark is found for partition twitter-topic-0 (kafka.cluster.Partition)
kafka-broker-1_1   | [2022-12-15 01:51:24,798] INFO Replica loaded for partition twitter-topic-0 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-1_1   | [2022-12-15 01:51:24,798] INFO Replica loaded for partition twitter-topic-0 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-1_1   | [2022-12-15 01:51:24,799] INFO Replica loaded for partition twitter-topic-1 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-1_1   | [2022-12-15 01:51:24,799] INFO Replica loaded for partition twitter-topic-1 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-1_1   | [2022-12-15 01:51:24,823] INFO [Log partition=twitter-topic-1, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
kafka-broker-3_1   | [2022-12-15 01:51:24,797] ERROR [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Error for partition twitter-topic-2 at offset 0 (kafka.server.ReplicaFetcherThread)
kafka-broker-3_1   | org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
kafka-broker-1_1   | [2022-12-15 01:51:24,845] INFO [Log partition=twitter-topic-1, dir=/var/lib/kafka/data] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 30 ms (kafka.log.Log)
kafka-broker-1_1   | [2022-12-15 01:51:24,867] INFO Created log for partition twitter-topic-1 in /var/lib/kafka/data with properties {compression.type -> producer, message.format.version -> 2.0-IV1, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
kafka-broker-1_1   | [2022-12-15 01:51:24,869] INFO [Partition twitter-topic-1 broker=1] No checkpointed highwatermark is found for partition twitter-topic-1 (kafka.cluster.Partition)
kafka-broker-1_1   | [2022-12-15 01:51:24,870] INFO Replica loaded for partition twitter-topic-1 with initial high watermark 0 (kafka.cluster.Replica)
kafka-broker-1_1   | [2022-12-15 01:51:24,880] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions twitter-topic-0,twitter-topic-1 (kafka.server.ReplicaFetcherManager)
kafka-broker-1_1   | [2022-12-15 01:51:24,883] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-0 with leader 3 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,885] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-1 with leader 2 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,893] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition twitter-topic-0 as part of become-follower request with correlation id 5 from controller 2 epoch 1 with leader 3 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,894] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition twitter-topic-1 as part of become-follower request with correlation id 5 from controller 2 epoch 1 with leader 2 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,935] INFO [ReplicaFetcherManager on broker 1] Added fetcher for partitions List([twitter-topic-1, initOffset 0 to broker BrokerEndPoint(2,kafka-broker-2,9092)] , [twitter-topic-0, initOffset 0 to broker BrokerEndPoint(3,kafka-broker-3,9092)] ) (kafka.server.ReplicaFetcherManager)
kafka-broker-1_1   | [2022-12-15 01:51:24,936] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-0 with leader 3 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,937] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 2 epoch 1 with correlation id 5 for partition twitter-topic-1 with leader 2 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,937] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition twitter-topic-0 with leader 3 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,937] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition twitter-topic-1 with leader 2 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,939] INFO [ReplicaAlterLogDirsManager on broker 1] Added fetcher for partitions List() (kafka.server.ReplicaAlterLogDirsManager)
kafka-broker-2_1   | [2022-12-15 01:51:24,959] TRACE [Controller id=2 epoch=1] Received response {error_code=0,partitions=[{topic=twitter-topic,partition=0,error_code=0},{topic=twitter-topic,partition=1,error_code=0},{topic=twitter-topic,partition=2,error_code=0}]} for request LEADER_AND_ISR with correlation id 5 sent to broker kafka-broker-1:9092 (id: 1 rack: null) (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,993] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) for partition twitter-topic-0 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,995] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition twitter-topic-1 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger)
kafka-broker-1_1   | [2022-12-15 01:51:24,995] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition twitter-topic-2 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger)
kafka-broker-2_1   | [2022-12-15 01:51:25,002] TRACE [Controller id=2 epoch=1] Received response {error_code=0} for request UPDATE_METADATA with correlation id 6 sent to broker kafka-broker-1:9092 (id: 1 rack: null) (state.change.logger)
schema-registry_1  | [2022-12-15 01:51:25,160] INFO 172.20.0.1 - - [15/Dec/2022:01:51:24 +0000] "GET / HTTP/1.1" 200 2  1109 (io.confluent.rest-utils.requests)
kafka-broker-1_1   | [2022-12-15 01:51:25,275] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Based on follower's leader epoch, leader replied with an unknown offset in twitter-topic-1. The initial fetch offset 0 will be used for truncation. (kafka.server.ReplicaFetcherThread)
kafka-broker-1_1   | [2022-12-15 01:51:25,284] INFO [Log partition=twitter-topic-1, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
kafka-broker-1_1   | [2022-12-15 01:51:25,400] WARN [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Based on follower's leader epoch, leader replied with an unknown offset in twitter-topic-0. The initial fetch offset 0 will be used for truncation. (kafka.server.ReplicaFetcherThread)
kafka-broker-1_1   | [2022-12-15 01:51:25,401] INFO [Log partition=twitter-topic-0, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
schema-registry_1  | [2022-12-15 01:51:26,492] INFO Wait to catch up until the offset of the last message at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
schema-registry_1  | [2022-12-15 01:51:26,704] INFO 172.20.0.1 - - [15/Dec/2022:01:51:25 +0000] "POST /subjects/twitter-topic-value/versions HTTP/1.1" 200 8  1316 (io.confluent.rest-utils.requests)
kafka-broker-2_1   | [2022-12-15 01:51:44,984] INFO [Admin Manager on Broker 2]: Error processing create topic request for topic twitter-topic with arguments (numPartitions=3, replicationFactor=3, replicasAssignments={}, configs={}) (kafka.server.AdminManager)
kafka-broker-2_1   | org.apache.kafka.common.errors.TopicExistsException: Topic 'twitter-topic' already exists.
schema-registry_1  | [2022-12-15 01:51:45,103] INFO 172.20.0.1 - - [15/Dec/2022:01:51:45 +0000] "GET / HTTP/1.1" 200 2  27 (io.confluent.rest-utils.requests)
schema-registry_1  | [2022-12-15 01:51:45,244] INFO 172.20.0.1 - - [15/Dec/2022:01:51:45 +0000] "POST /subjects/twitter-topic-value/versions HTTP/1.1" 200 8  33 (io.confluent.rest-utils.requests)
kafka-broker-2_1   | [2022-12-15 01:55:49,803] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 01:55:49,845] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(twitter-topic-1 -> Vector(2, 3, 1), __confluent.support.metrics-0 -> Vector(2, 3, 1)), 1 -> Map(twitter-topic-2 -> Vector(1, 2, 3)), 3 -> Map(_schemas-0 -> Vector(3, 2, 1), twitter-topic-0 -> Vector(3, 1, 2))) (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 01:55:49,846] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 01:55:49,847] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 01:55:49,847] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 01:55:49,848] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 01:55:49,848] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 01:55:49,848] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
kafka-broker-1_1   | [2022-12-15 02:00:42,526] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
kafka-broker-3_1   | [2022-12-15 02:00:42,542] INFO [GroupMetadataManager brokerId=3] Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
kafka-broker-2_1   | [2022-12-15 02:00:42,555] INFO [GroupMetadataManager brokerId=2] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
kafka-broker-2_1   | [2022-12-15 02:00:49,851] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 02:00:49,860] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(twitter-topic-1 -> Vector(2, 3, 1), __confluent.support.metrics-0 -> Vector(2, 3, 1)), 1 -> Map(twitter-topic-2 -> Vector(1, 2, 3)), 3 -> Map(_schemas-0 -> Vector(3, 2, 1), twitter-topic-0 -> Vector(3, 1, 2))) (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 02:00:49,861] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 02:00:49,862] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 02:00:49,862] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 02:00:49,862] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 02:00:49,862] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
kafka-broker-2_1   | [2022-12-15 02:00:49,863] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
