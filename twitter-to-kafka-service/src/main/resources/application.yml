#twitter-to-kafka-service:
#  twitter-keywords:
#    - Java
#    - Microservices
#    - Kafka
#    - Elasticsearch
#  welcome-message: Hello microservices!
#  mock-min-tweet-length: 5
#  mock-max-tweet-length: 15
#  mock-sleep-ms: 10000
#
#retry-config:
#  initial-interval-ms: 1000
#  max-interval-ms: 10000
#  multiplier: 2.0
#  maxAttempts: 3
#  sleep-time-ms: 2000
#
#kafka-config:
#  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
#  schema-registry-url-key: schema.registry.url
#  schema-registry-url: http://localhost:8081
#  topic-name: twitter-topic
#  topic-names-to-create:
#    - twitter-topic
#    - twitter-analytics-topic
#  num-of-partitions: 3
#  replication-factor: 3
#
#kafka-producer-config:
#  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
#  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
#  compression-type: snappy
#  acks: all
#  batch-size: 16384
#  batch-size-boost-factor: 100
#  linger-ms: 5
#  request-timeout-ms: 60000
#  retry-count: 5

spring:
  application:
    name: twitter-to-kafka-service
  profiles:
    active: twitter_to_kafka
  config:
    import: 'configserver:'
  cloud:
    config:
      name: twitter-to-kafka-service,config-client
      username: spring_cloud_user
      password: '{cipher}c11f5a9622fa4793144a574045e86486ee7369a389fb0ac029b3f9f8b748d2c1ad52f77c81040cfafc3a2a2bf6c3801e'
#      uri: http://localhost:8888
encrypt:
  key: 'Demo_Pwd!2022'
